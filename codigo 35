import { useDebounce } from './useDebounce'

export function useProductSearch() {
  const [query, setQuery] = useState('')
  const [filters, setFilters] = useState<ProductFilters>({})
  const debouncedQuery = useDebounce(query, 300)
  
  const { data, isLoading, error } = useQuery({
    queryKey: ['products', 'search', debouncedQuery, filters],
    queryFn: async () => {
      const response = await fetch('/api/products/search', {
        method: 'POST',
        body: JSON.stringify({
          query: debouncedQuery,
          filters
        })
      })
      
      if (!response.ok) throw new Error('Search failed')
      return response.json()
    },
    enabled: debouncedQuery.length > 2 || Object.keys(filters).length > 0,
    staleTime: 2 * 60 * 1000, // 2 minutos
  })
  
  return {
    query,
    setQuery,
    filters,
    setFilters,
    results: data?.products || [],
    isLoading,
    error,
    hasResults: data?.products?.length > 0
  }
}
